%{
import java.io.*;
import java.nio.charset.Charset;
%}

%class JsonParser
%interface ParserTokens
%package org.jeesonmap

%semantic String
%token OP_BRK CL_BRK STR NUM COM DD OP_SQR CL_SQR BOOL NULL

%%
start:
   json {
       $$ = $1;
       System.out.println("Final JSON: " + $$);
       this.parsedResult = $$;
   }
   ;

json:
   object {
       $$ = $1;
       System.out.println("Parsed object: " + $$);
   }
   | array {
       $$ = $1;
       System.out.println("Parsed array: " + $$);
   }
   ;

object:
   OP_BRK pair_list CL_BRK {
       $$ = "{" + $2 + "}";
       System.out.println("Built object: " + $$);
   }
   | OP_BRK CL_BRK {
       $$ = "{}";
   }
   ;

array:
   OP_SQR value_list CL_SQR {
       $$ = "[" + $2 + "]";
       System.out.println("Built array: " + $$);
   }
   | OP_SQR CL_SQR {
       $$ = "[]";
   }
   ;

value:
   STR {
       $$ = $1;
       System.out.println("Value (string): " + $$);
   }
   | NUM {
       $$ = $1;
       System.out.println("Value (number): " + $$);
   }
   | array {
       $$ = $1;
       System.out.println("Value (array): " + $$);
   }
   | object {
       $$ = $1;
       System.out.println("Value (object): " + $$);
   }
   | BOOL {
       $$ = $1;
       System.out.println("Value (boolean): " + $$);
   }
   | NULL {
       $$ = $1;
       System.out.println("Value (null): " + $$);
   }
   ;

value_list:
   value {
       $$ = $1;
       System.out.println("Starting value list: " + $$);
   }
   | value_list COM value {
       $$ = $1 + ", " + $3;
       System.out.println("Growing value list: " + $$);
   }
   | value_list COM {
        yyerror("There is an extra comma in the array at line " + lexer.getLine() + ", column " + lexer.getColumn() + "!!! Remove the comma or add another value.");
   }
   ;

key:
   STR {
       $$ = $1;
       System.out.println("Found key: " + $$);
   }
   ;

pair:
   key DD value {
       $$ = $1 + ": " + $3;
       System.out.println("Built pair: " + $$);
   }
   | key value {
        yyerror("There is a missing colon (:) at line " + lexer.getLine() + ", column " + lexer.getColumn() + "!!! Maybe you forgot it while adding a new key/value pair.");
   }
   ;

pair_list:
   pair {
       $$ = $1;
       System.out.println("Starting pair list: " + $$);
   }
   | pair_list COM pair {
       $$ = $1 + ", " + $3;
       System.out.println("Growing pair list: " + $$);
   }
   | pair_list COM {
        yyerror("There is an extra comma in the object at line " + lexer.getLine() + ", column " + lexer.getColumn() + "!!! Remove the comma or add another key/value pair.");
   }
   ;
%%

private JsonLexer lexer;
private String parsedResult;

public JsonParser(JsonLexer lexer) {
    this.lexer = lexer;
}

public void yyerror(String error) {
    throw new RuntimeException("Parsing stopped because of this error: " + error);
}

public String getParsedResult() {
    return this.parsedResult;
}